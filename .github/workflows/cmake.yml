name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  BUILD_TYPE: Release

jobs:
   build:
    strategy:
      matrix:
        config:
          - { name: "Windows MSVC", os: windows-latest, cmake_gen: ""}
          - { name: "Ubuntu gcc", os: ubuntu-latest, cmake_gen: "-G Ninja" }
          - { name: "MacOS clang", os: macos-latest, cmake_gen: "-G Ninja" }
    runs-on: ${{ matrix.config.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.6'
        target: 'desktop'
        setup-python: 'false'

    - name: Install Ninja
      if: matrix.config.os != 'windows-latest'
      shell: bash
      run: ${{ matrix.config.os == 'macos-latest' && 'brew install ninja' || matrix.config.os == 'ubuntu-latest' && 'sudo apt-get install ninja-build' }}

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build ${{matrix.config.cmake_gen}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install -DNITIZE_ADDRESS=ON -DSANITIZE_MEMORY=ON -DSANITIZE_THREAD=OFF -DSANITIZE_UNDEFINED=ON
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j ${{steps.cpus.outputs.count}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure
    
    # Create package as artifact
    - name: Pack
      if: matrix.config.os == 'windows-latest'
      shell: cmd
      run: |
        cmake --build ${{github.workspace}}/build -t install --config ${{env.BUILD_TYPE}}
        cmake --build ${{github.workspace}}/build -t bundle --config ${{env.BUILD_TYPE}}
    
    - name: Upload artifacts
      if: matrix.config.os == 'windows-latest'
      uses: actions/upload-artifact@v3
      with:
        name: Windows-Package
        path: ${{github.workspace}}/build/src/IncludeFilter-*